class Solution {
public:
    void nextPermutation(vector<int>& A) {
        //find the pivot 
        int pivot = -1, n = A.size();
        if (n == 1){
            return;
        }
        for(int i=n-2; i>=0; i--){
            if(A[i] < A[i+1]){
                pivot = i;
                break;
            }
        }
        
        if (pivot == -1){
            reverse (A.begin(), A.end());
            return;
        }

        //2 step - next larger element 
        for(int i=n-1; i>pivot; i--){
            if(A[pivot] < A[i]){
                swap (A[pivot] , A[i]);
                break;
            }
        }

        //3rd step - reverse piv+1 to n-1

        int i = pivot+1 , j = n-1;
        while(i <= j){
            swap( A[i++], A[j--]);
        }
    }
};
